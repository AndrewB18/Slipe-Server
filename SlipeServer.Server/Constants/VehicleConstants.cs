using SlipeServer.Packets.Enums;
using SlipeServer.Server.Elements;
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;

namespace SlipeServer.Server.Constants
{
    public class VehicleConstants
    {
        public static HashSet<VehicleModel> TrailerModels { get; } = new()
        {
            VehicleModel.Trailer1,
            VehicleModel.Trailer2,
            VehicleModel.TrailerTankerCommando,
            VehicleModel.Trailer3,
            VehicleModel.BaggageTrailerCovered,
            VehicleModel.BaggageTrailerUncovered,
            VehicleModel.TrailerStairs,
            VehicleModel.FarmTrailer,
            VehicleModel.FarmTrailerTwo
        };

        public static HashSet<VehicleModel> WaterEntryVehicles { get; } = new()
        {
            VehicleModel.Leviathan,
            VehicleModel.Seasparrow,
            VehicleModel.Skimmer,
            VehicleModel.Vortex
        };

        public static Dictionary<VehicleModel, byte> DoorsPerVehicle { get; } = new()
        {
            [VehicleModel.Landstalker] = 4,
            [VehicleModel.Bravura] = 4,
            [VehicleModel.Buffalo] = 4,
            [VehicleModel.Linerunner] = 4,
            [VehicleModel.Perennial] = 4,
            [VehicleModel.Sentinel] = 4,
            [VehicleModel.Dumper] = 1,
            [VehicleModel.FireTruck] = 2,
            [VehicleModel.Trashmaster] = 2,
            [VehicleModel.Stretch] = 4,
            [VehicleModel.Manana] = 2,
            [VehicleModel.Infernus] = 2,
            [VehicleModel.Voodoo] = 4,
            [VehicleModel.Pony] = 4,
            [VehicleModel.Mule] = 4,
            [VehicleModel.Cheetah] = 2,
            [VehicleModel.Ambulance] = 4,
            [VehicleModel.Leviathan] = 2,
            [VehicleModel.Moonbeam] = 4,
            [VehicleModel.Esperanto] = 4,
            [VehicleModel.Taxi] = 4,
            [VehicleModel.Washington] = 4,
            [VehicleModel.Bobcat] = 2,
            [VehicleModel.MrWhoopee] = 2,
            [VehicleModel.BFInjection] = 2,
            [VehicleModel.Hunter] = 1,
            [VehicleModel.Premier] = 4,
            [VehicleModel.Enforcer] = 4,
            [VehicleModel.Securicar] = 4,
            [VehicleModel.Banshee] = 2,
            [VehicleModel.Predator] = 0,
            [VehicleModel.Bus] = 1,
            [VehicleModel.Rhino] = 1,
            [VehicleModel.Barracks] = 2,
            [VehicleModel.Hotknife] = 2,
            [VehicleModel.Trailer1] = 0,
            [VehicleModel.Previon] = 4,
            [VehicleModel.Coach] = 1,
            [VehicleModel.Cabbie] = 4,
            [VehicleModel.Stallion] = 4,
            [VehicleModel.Rumpo] = 4,
            [VehicleModel.RCBandit] = 0,
            [VehicleModel.Romero] = 4,
            [VehicleModel.Packer] = 2,
            [VehicleModel.Monster] = 2,
            [VehicleModel.Admiral] = 4,
            [VehicleModel.Squalo] = 0,
            [VehicleModel.Seasparrow] = 2,
            [VehicleModel.Pizzaboy] = 0,
            [VehicleModel.Tram] = 0,
            [VehicleModel.Trailer2] = 0,
            [VehicleModel.Turismo] = 2,
            [VehicleModel.Speeder] = 0,
            [VehicleModel.Reefer] = 0,
            [VehicleModel.Tropic] = 0,
            [VehicleModel.Flatbed] = 2,
            [VehicleModel.Yankee] = 2,
            [VehicleModel.Caddy] = 0,
            [VehicleModel.Solair] = 4,
            [VehicleModel.BerkleysRCVan] = 4,
            [VehicleModel.Skimmer] = 2,
            [VehicleModel.PCJ600] = 0,
            [VehicleModel.Faggio] = 0,
            [VehicleModel.Freeway] = 0,
            [VehicleModel.RCBaron] = 0,
            [VehicleModel.RCRaider] = 0,
            [VehicleModel.Glendale] = 4,
            [VehicleModel.Oceanic] = 4,
            [VehicleModel.Sanchez] = 0,
            [VehicleModel.Sparrow] = 2,
            [VehicleModel.Patriot] = 4,
            [VehicleModel.Quadbike] = 0,
            [VehicleModel.Coastguard] = 0,
            [VehicleModel.Dinghy] = 0,
            [VehicleModel.Hermes] = 4,
            [VehicleModel.Sabre] = 4,
            [VehicleModel.Rustler] = 1,
            [VehicleModel.ZR350] = 2,
            [VehicleModel.Walton] = 4,
            [VehicleModel.Regina] = 4,
            [VehicleModel.Comet] = 2,
            [VehicleModel.BMX] = 0,
            [VehicleModel.Burrito] = 4,
            [VehicleModel.Camper] = 2,
            [VehicleModel.Marquis] = 0,
            [VehicleModel.Baggage] = 0,
            [VehicleModel.Dozer] = 0,
            [VehicleModel.Maverick] = 4,
            [VehicleModel.NewsChopper] = 4,
            [VehicleModel.Rancher] = 2,
            [VehicleModel.FBIRancher] = 4,
            [VehicleModel.Virgo] = 4,
            [VehicleModel.Greenwood] = 4,
            [VehicleModel.Jetmax] = 0,
            [VehicleModel.HotringRacer] = 4,
            [VehicleModel.Sandking] = 2,
            [VehicleModel.BlistaCompact] = 2,
            [VehicleModel.PoliceMaverick] = 4,
            [VehicleModel.Boxville] = 4,
            [VehicleModel.Benson] = 4,
            [VehicleModel.Mesa] = 4,
            [VehicleModel.RCGoblin] = 0,
            [VehicleModel.HotringRacer3] = 2,
            [VehicleModel.HotringRacer2] = 2,
            [VehicleModel.BloodringBanger] = 0,
            [VehicleModel.RancherLure] = 2,
            [VehicleModel.SuperGT] = 2,
            [VehicleModel.Elegant] = 4,
            [VehicleModel.Journey] = 4,
            [VehicleModel.Bike] = 0,
            [VehicleModel.MountainBike] = 0,
            [VehicleModel.Beagle] = 2,
            [VehicleModel.Cropduster] = 1,
            [VehicleModel.Stuntplane] = 1,
            [VehicleModel.Tanker] = 2,
            [VehicleModel.Roadtrain] = 2,
            [VehicleModel.Nebula] = 4,
            [VehicleModel.Majestic] = 4,
            [VehicleModel.Buccaneer] = 4,
            [VehicleModel.Shamal] = 1,
            [VehicleModel.Hydra] = 1,
            [VehicleModel.FCR900] = 0,
            [VehicleModel.NRG500] = 0,
            [VehicleModel.HPV1000] = 0,
            [VehicleModel.CementTruck] = 2,
            [VehicleModel.Towtruck] = 2,
            [VehicleModel.Fortune] = 4,
            [VehicleModel.Cadrona] = 4,
            [VehicleModel.FBITruck] = 4,
            [VehicleModel.Willard] = 4,
            [VehicleModel.Forklift] = 0,
            [VehicleModel.Tractor] = 0,
            [VehicleModel.CombineHarvester] = 1,
            [VehicleModel.Feltzer] = 2,
            [VehicleModel.Remington] = 4,
            [VehicleModel.Slamvan] = 2,
            [VehicleModel.Blade] = 2,
            [VehicleModel.Freight] = 2,
            [VehicleModel.Streak] = 2,
            [VehicleModel.Vortex] = 0,
            [VehicleModel.Vincent] = 4,
            [VehicleModel.Bullet] = 2,
            [VehicleModel.Clover] = 4,
            [VehicleModel.Sadler] = 2,
            [VehicleModel.FireTruckLadder] = 2,
            [VehicleModel.Hustler] = 2,
            [VehicleModel.Intruder] = 4,
            [VehicleModel.Primo] = 4,
            [VehicleModel.Cargobob] = 2,
            [VehicleModel.Tampa] = 2,
            [VehicleModel.Sunrise] = 4,
            [VehicleModel.Merit] = 4,
            [VehicleModel.UtilityVan] = 2,
            [VehicleModel.Nevada] = 4,
            [VehicleModel.Yosemite] = 4,
            [VehicleModel.Windsor] = 2,
            [VehicleModel.Monster2] = 2,
            [VehicleModel.Monster3] = 2,
            [VehicleModel.Uranus] = 4,
            [VehicleModel.Jester] = 4,
            [VehicleModel.Sultan] = 4,
            [VehicleModel.Stratum] = 4,
            [VehicleModel.Elegy] = 2,
            [VehicleModel.Raindance] = 2,
            [VehicleModel.RCTiger] = 0,
            [VehicleModel.Flash] = 4,
            [VehicleModel.Tahoma] = 4,
            [VehicleModel.Savanna] = 2,
            [VehicleModel.Bandito] = 0,
            [VehicleModel.FreightTrainFlatbed] = 0,
            [VehicleModel.StreakTrainTrailer] = 0,
            [VehicleModel.Kart] = 0,
            [VehicleModel.Mower] = 0,
            [VehicleModel.Dune] = 2,
            [VehicleModel.Sweeper] = 4,
            [VehicleModel.Broadway] = 2,
            [VehicleModel.Tornado] = 4,
            [VehicleModel.AT400] = 1,
            [VehicleModel.DFT30] = 2,
            [VehicleModel.Huntley] = 4,
            [VehicleModel.Stafford] = 4,
            [VehicleModel.BF400] = 0,
            [VehicleModel.Newsvan] = 4,
            [VehicleModel.Tug] = 1,
            [VehicleModel.TrailerTankerCommando] = 0,
            [VehicleModel.Emperor] = 4,
            [VehicleModel.Wayfarer] = 0,
            [VehicleModel.Euros] = 4,
            [VehicleModel.Hotdog] = 2,
            [VehicleModel.Club] = 2,
            [VehicleModel.BoxFreight] = 0,
            [VehicleModel.Trailer3] = 0,
            [VehicleModel.Andromada] = 1,
            [VehicleModel.Dodo] = 2,
            [VehicleModel.RCCam] = 1,
            [VehicleModel.Launch] = 1,
            [VehicleModel.PoliceLS] = 4,
            [VehicleModel.PoliceSf] = 4,
            [VehicleModel.PoliceLV] = 4,
            [VehicleModel.PoliceRanger] = 2,
            [VehicleModel.Picador] = 2,
            [VehicleModel.SwatTank] = 2,
            [VehicleModel.Alpha] = 2,
            [VehicleModel.Phoenix] = 2,
            [VehicleModel.GlendaleDamaged] = 4,
            [VehicleModel.SadlerDamaged] = 2,
            [VehicleModel.BaggageTrailerCovered] = 0,
            [VehicleModel.BaggageTrailerUncovered] = 0,
            [VehicleModel.TrailerStairs] = 0,
            [VehicleModel.FarmTrailer] = 0,
            [VehicleModel.FarmTrailerTwo] = 0
        };

        public static Dictionary<VehicleModel, byte> SeatsPerVehicle { get; } = new()
        {
            [VehicleModel.Landstalker] = 4,
            [VehicleModel.Bravura] = 4,
            [VehicleModel.Buffalo] = 4,
            [VehicleModel.Linerunner] = 4,
            [VehicleModel.Perennial] = 4,
            [VehicleModel.Sentinel] = 4,
            [VehicleModel.Dumper] = 1,
            [VehicleModel.FireTruck] = 2,
            [VehicleModel.Trashmaster] = 2,
            [VehicleModel.Stretch] = 4,
            [VehicleModel.Manana] = 2,
            [VehicleModel.Infernus] = 2,
            [VehicleModel.Voodoo] = 4,
            [VehicleModel.Pony] = 4,
            [VehicleModel.Mule] = 4,
            [VehicleModel.Cheetah] = 2,
            [VehicleModel.Ambulance] = 4,
            [VehicleModel.Leviathan] = 2,
            [VehicleModel.Moonbeam] = 4,
            [VehicleModel.Esperanto] = 4,
            [VehicleModel.Taxi] = 4,
            [VehicleModel.Washington] = 4,
            [VehicleModel.Bobcat] = 2,
            [VehicleModel.MrWhoopee] = 2,
            [VehicleModel.BFInjection] = 2,
            [VehicleModel.Hunter] = 1,
            [VehicleModel.Premier] = 4,
            [VehicleModel.Enforcer] = 4,
            [VehicleModel.Securicar] = 4,
            [VehicleModel.Banshee] = 2,
            [VehicleModel.Predator] = 1,
            [VehicleModel.Bus] = 1,
            [VehicleModel.Rhino] = 1,
            [VehicleModel.Barracks] = 2,
            [VehicleModel.Hotknife] = 2,
            [VehicleModel.Trailer1] = 0,
            [VehicleModel.Previon] = 4,
            [VehicleModel.Coach] = 1,
            [VehicleModel.Cabbie] = 4,
            [VehicleModel.Stallion] = 4,
            [VehicleModel.Rumpo] = 4,
            [VehicleModel.RCBandit] = 1,
            [VehicleModel.Romero] = 4,
            [VehicleModel.Packer] = 2,
            [VehicleModel.Monster] = 2,
            [VehicleModel.Admiral] = 4,
            [VehicleModel.Squalo] = 1,
            [VehicleModel.Seasparrow] = 2,
            [VehicleModel.Pizzaboy] = 2,
            [VehicleModel.Tram] = 1,
            [VehicleModel.Trailer2] = 0,
            [VehicleModel.Turismo] = 2,
            [VehicleModel.Speeder] = 1,
            [VehicleModel.Reefer] = 1,
            [VehicleModel.Tropic] = 1,
            [VehicleModel.Flatbed] = 2,
            [VehicleModel.Yankee] = 2,
            [VehicleModel.Caddy] = 2,
            [VehicleModel.Solair] = 4,
            [VehicleModel.BerkleysRCVan] = 4,
            [VehicleModel.Skimmer] = 2,
            [VehicleModel.PCJ600] = 2,
            [VehicleModel.Faggio] = 2,
            [VehicleModel.Freeway] = 2,
            [VehicleModel.RCBaron] = 1,
            [VehicleModel.RCRaider] = 0,
            [VehicleModel.Glendale] = 4,
            [VehicleModel.Oceanic] = 4,
            [VehicleModel.Sanchez] = 1,
            [VehicleModel.Sparrow] = 2,
            [VehicleModel.Patriot] = 4,
            [VehicleModel.Quadbike] = 1,
            [VehicleModel.Coastguard] = 1,
            [VehicleModel.Dinghy] = 0,
            [VehicleModel.Hermes] = 4,
            [VehicleModel.Sabre] = 4,
            [VehicleModel.Rustler] = 1,
            [VehicleModel.ZR350] = 2,
            [VehicleModel.Walton] = 4,
            [VehicleModel.Regina] = 4,
            [VehicleModel.Comet] = 2,
            [VehicleModel.BMX] = 1,
            [VehicleModel.Burrito] = 4,
            [VehicleModel.Camper] = 2,
            [VehicleModel.Marquis] = 1,
            [VehicleModel.Baggage] = 1,
            [VehicleModel.Dozer] = 1,
            [VehicleModel.Maverick] = 4,
            [VehicleModel.NewsChopper] = 4,
            [VehicleModel.Rancher] = 2,
            [VehicleModel.FBIRancher] = 4,
            [VehicleModel.Virgo] = 4,
            [VehicleModel.Greenwood] = 4,
            [VehicleModel.Jetmax] = 1,
            [VehicleModel.HotringRacer] = 4,
            [VehicleModel.Sandking] = 2,
            [VehicleModel.BlistaCompact] = 2,
            [VehicleModel.PoliceMaverick] = 4,
            [VehicleModel.Boxville] = 4,
            [VehicleModel.Benson] = 4,
            [VehicleModel.Mesa] = 4,
            [VehicleModel.RCGoblin] = 1,
            [VehicleModel.HotringRacer3] = 2,
            [VehicleModel.HotringRacer2] = 2,
            [VehicleModel.BloodringBanger] = 2,
            [VehicleModel.RancherLure] = 2,
            [VehicleModel.SuperGT] = 2,
            [VehicleModel.Elegant] = 4,
            [VehicleModel.Journey] = 4,
            [VehicleModel.Bike] = 1,
            [VehicleModel.MountainBike] = 1,
            [VehicleModel.Beagle] = 2,
            [VehicleModel.Cropduster] = 1,
            [VehicleModel.Stuntplane] = 1,
            [VehicleModel.Tanker] = 2,
            [VehicleModel.Roadtrain] = 2,
            [VehicleModel.Nebula] = 4,
            [VehicleModel.Majestic] = 4,
            [VehicleModel.Buccaneer] = 4,
            [VehicleModel.Shamal] = 1,
            [VehicleModel.Hydra] = 1,
            [VehicleModel.FCR900] = 2,
            [VehicleModel.NRG500] = 2,
            [VehicleModel.HPV1000] = 2,
            [VehicleModel.CementTruck] = 2,
            [VehicleModel.Towtruck] = 2,
            [VehicleModel.Fortune] = 4,
            [VehicleModel.Cadrona] = 4,
            [VehicleModel.FBITruck] = 4,
            [VehicleModel.Willard] = 4,
            [VehicleModel.Forklift] = 1,
            [VehicleModel.Tractor] = 1,
            [VehicleModel.CombineHarvester] = 1,
            [VehicleModel.Feltzer] = 2,
            [VehicleModel.Remington] = 4,
            [VehicleModel.Slamvan] = 2,
            [VehicleModel.Blade] = 2,
            [VehicleModel.Freight] = 2,
            [VehicleModel.Streak] = 2,
            [VehicleModel.Vortex] = 1,
            [VehicleModel.Vincent] = 4,
            [VehicleModel.Bullet] = 2,
            [VehicleModel.Clover] = 4,
            [VehicleModel.Sadler] = 2,
            [VehicleModel.FireTruckLadder] = 2,
            [VehicleModel.Hustler] = 2,
            [VehicleModel.Intruder] = 4,
            [VehicleModel.Primo] = 4,
            [VehicleModel.Cargobob] = 2,
            [VehicleModel.Tampa] = 2,
            [VehicleModel.Sunrise] = 4,
            [VehicleModel.Merit] = 4,
            [VehicleModel.UtilityVan] = 2,
            [VehicleModel.Nevada] = 4,
            [VehicleModel.Yosemite] = 4,
            [VehicleModel.Windsor] = 2,
            [VehicleModel.Monster2] = 2,
            [VehicleModel.Monster3] = 2,
            [VehicleModel.Uranus] = 4,
            [VehicleModel.Jester] = 4,
            [VehicleModel.Sultan] = 4,
            [VehicleModel.Stratum] = 4,
            [VehicleModel.Elegy] = 2,
            [VehicleModel.Raindance] = 2,
            [VehicleModel.RCTiger] = 1,
            [VehicleModel.Flash] = 4,
            [VehicleModel.Tahoma] = 4,
            [VehicleModel.Savanna] = 2,
            [VehicleModel.Bandito] = 1,
            [VehicleModel.FreightTrainFlatbed] = 0,
            [VehicleModel.StreakTrainTrailer] = 0,
            [VehicleModel.Kart] = 1,
            [VehicleModel.Mower] = 1,
            [VehicleModel.Dune] = 2,
            [VehicleModel.Sweeper] = 4,
            [VehicleModel.Broadway] = 2,
            [VehicleModel.Tornado] = 4,
            [VehicleModel.AT400] = 1,
            [VehicleModel.DFT30] = 2,
            [VehicleModel.Huntley] = 4,
            [VehicleModel.Stafford] = 4,
            [VehicleModel.BF400] = 2,
            [VehicleModel.Newsvan] = 4,
            [VehicleModel.Tug] = 1,
            [VehicleModel.TrailerTankerCommando] = 0,
            [VehicleModel.Emperor] = 4,
            [VehicleModel.Wayfarer] = 2,
            [VehicleModel.Euros] = 4,
            [VehicleModel.Hotdog] = 2,
            [VehicleModel.Club] = 2,
            [VehicleModel.BoxFreight] = 0,
            [VehicleModel.Trailer3] = 0,
            [VehicleModel.Andromada] = 1,
            [VehicleModel.Dodo] = 2,
            [VehicleModel.RCCam] = 1,
            [VehicleModel.Launch] = 1,
            [VehicleModel.PoliceLS] = 4,
            [VehicleModel.PoliceSf] = 4,
            [VehicleModel.PoliceLV] = 4,
            [VehicleModel.PoliceRanger] = 2,
            [VehicleModel.Picador] = 2,
            [VehicleModel.SwatTank] = 2,
            [VehicleModel.Alpha] = 2,
            [VehicleModel.Phoenix] = 2,
            [VehicleModel.GlendaleDamaged] = 4,
            [VehicleModel.SadlerDamaged] = 2,
            [VehicleModel.BaggageTrailerCovered] = 0,
            [VehicleModel.BaggageTrailerUncovered] = 0,
            [VehicleModel.TrailerStairs] = 0,
            [VehicleModel.FarmTrailer] = 0,
            [VehicleModel.FarmTrailerTwo] = 0
        };

        public static HashSet<VehicleModel> AdjustablePropertyModels { get; } = new()
        {
            VehicleModel.Dumper,
            VehicleModel.Packer,
            VehicleModel.Dozer,
            VehicleModel.Hydra,
            VehicleModel.Towtruck,
            VehicleModel.Forklift,
            VehicleModel.Tractor,
            VehicleModel.Andromada,
        };

        public static HashSet<VehicleModel> TurretModels { get; } = new()
        {
            VehicleModel.FireTruck,
            VehicleModel.Rhino,
            VehicleModel.SwatTank,
        };

        public static Dictionary<ushort, HashSet<ushort>> AvailiableUpgrades = new()
        {
            [400] = new HashSet<ushort> { 1008, 1009, 1010, 1013, 1018, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [401] = new HashSet<ushort> { 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1146, 1147, 1158, 1162, 1163 },
            [402] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [403] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [404] = new HashSet<ushort> { 1000, 1002, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [405] = new HashSet<ushort> { 1000, 1001, 1008, 1009, 1010, 1014, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [406] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [407] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [408] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [409] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [410] = new HashSet<ushort> { 1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [411] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [412] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [413] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [414] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [415] = new HashSet<ushort> { 1001, 1003, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [416] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [417] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [418] = new HashSet<ushort> { 1002, 1006, 1008, 1009, 1010, 1016, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [419] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [420] = new HashSet<ushort> { 1001, 1003, 1004, 1005, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [421] = new HashSet<ushort> { 1000, 1008, 1009, 1010, 1014, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [422] = new HashSet<ushort> { 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [423] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [424] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [425] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [426] = new HashSet<ushort> { 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [427] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [428] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [429] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [430] = new HashSet<ushort> { },
            [431] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [432] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [433] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [434] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [436] = new HashSet<ushort> { 1001, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [437] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [438] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [439] = new HashSet<ushort> { 1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [440] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [441] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [442] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [443] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [444] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [445] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [446] = new HashSet<ushort> { },
            [447] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [448] = new HashSet<ushort> { },
            [449] = new HashSet<ushort> { },
            [451] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [452] = new HashSet<ushort> { },
            [453] = new HashSet<ushort> { },
            [454] = new HashSet<ushort> { },
            [455] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [456] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [457] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [458] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [459] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [460] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [461] = new HashSet<ushort> { },
            [462] = new HashSet<ushort> { },
            [463] = new HashSet<ushort> { },
            [464] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [465] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [466] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [467] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [468] = new HashSet<ushort> { 1086 },
            [469] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [470] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [471] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [472] = new HashSet<ushort> { },
            [473] = new HashSet<ushort> { },
            [474] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [475] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [476] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [478] = new HashSet<ushort> { 1004, 1005, 1008, 1009, 1010, 1012, 1013, 1020, 1021, 1022, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [479] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [480] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [481] = new HashSet<ushort> { },
            [482] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [483] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [484] = new HashSet<ushort> { },
            [485] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [486] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [487] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [488] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [489] = new HashSet<ushort> { 1000, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1016, 1018, 1019, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [490] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [491] = new HashSet<ushort> { 1003, 1007, 1008, 1009, 1010, 1014, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [492] = new HashSet<ushort> { 1000, 1004, 1005, 1006, 1008, 1009, 1010, 1016, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [493] = new HashSet<ushort> { },
            [494] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [495] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [496] = new HashSet<ushort> { 1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1017, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143 },
            [497] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [498] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [499] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [500] = new HashSet<ushort> { 1008, 1009, 1010, 1013, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [501] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [502] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [503] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [504] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [505] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [506] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [507] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [508] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [509] = new HashSet<ushort> { },
            [510] = new HashSet<ushort> { },
            [511] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [512] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [513] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [514] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [515] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [516] = new HashSet<ushort> { 1000, 1002, 1004, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [517] = new HashSet<ushort> { 1002, 1003, 1007, 1008, 1009, 1010, 1016, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [518] = new HashSet<ushort> { 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [519] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [520] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [521] = new HashSet<ushort> { },
            [522] = new HashSet<ushort> { },
            [523] = new HashSet<ushort> { },
            [524] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [525] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [526] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [527] = new HashSet<ushort> { 1001, 1007, 1008, 1009, 1010, 1014, 1015, 1017, 1018, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [528] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [529] = new HashSet<ushort> { 1001, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [530] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [531] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [532] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [533] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [534] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1100, 1101, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1178, 1179, 1180, 1185 },
            [535] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121 },
            [536] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1103, 1104, 1105, 1107, 1108, 1128, 1181, 1182, 1183, 1184 },
            [537] = new HashSet<ushort> { },
            [538] = new HashSet<ushort> { },
            [539] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [540] = new HashSet<ushort> { 1001, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [541] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [542] = new HashSet<ushort> { 1008, 1009, 1010, 1014, 1015, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1144, 1145 },
            [543] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [544] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [545] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [546] = new HashSet<ushort> { 1001, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [547] = new HashSet<ushort> { 1000, 1003, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143 },
            [548] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [549] = new HashSet<ushort> { 1001, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [550] = new HashSet<ushort> { 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [551] = new HashSet<ushort> { 1002, 1003, 1005, 1006, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [552] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [553] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [554] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [555] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [556] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [557] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [558] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1163, 1164, 1165, 1166, 1167, 1168 },
            [559] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1158, 1159, 1160, 1161, 1162, 1173 },
            [560] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1138, 1139, 1140, 1141, 1169, 1170 },
            [561] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1026, 1027, 1030, 1031, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1154, 1155, 1156, 1157 },
            [562] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1146, 1147, 1148, 1149, 1171, 1172 },
            [563] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [564] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [565] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1150, 1151, 1152, 1153 },
            [566] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [567] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1102, 1129, 1130, 1131, 1132, 1133, 1186, 1187, 1188, 1189 },
            [568] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [569] = new HashSet<ushort> { },
            [570] = new HashSet<ushort> { },
            [571] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [572] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [573] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [574] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [575] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1042, 1043, 1044, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1099, 1174, 1175, 1176, 1177 },
            [576] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1134, 1135, 1136, 1137, 1190, 1191, 1192, 1193 },
            [579] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [580] = new HashSet<ushort> { 1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [581] = new HashSet<ushort> { },
            [582] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [583] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [585] = new HashSet<ushort> { 1000, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [587] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [586] = new HashSet<ushort> { },
            [588] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [589] = new HashSet<ushort> { 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1018, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1144, 1145 },
            [590] = new HashSet<ushort> { },
            [591] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [592] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [593] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [594] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [595] = new HashSet<ushort> { },
            [596] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [597] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [598] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [599] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [600] = new HashSet<ushort> { 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [601] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [602] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [603] = new HashSet<ushort> { 1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145 },
            [604] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [605] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [606] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [607] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [608] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [609] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [610] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 },
            [611] = new HashSet<ushort> { 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098 }
        };

        public static ushort? UpgradeVehicleUpgradeId(Type upgradeType, ushort model, ushort upgrade)
        {
            ushort[] upgrades = new ushort[] { };
            if (upgradeType == typeof(VehicleUpgradeSpoiler))
                upgrades = UpgradeToIds((VehicleUpgradeSpoiler)upgrade);

            if (upgrades != null)
            {
                var result = upgrades.Intersect(AvailiableUpgrades[model]);

                if (result.Count() == 1)
                    return result.First();
                if (result.Count() == 2)
                    throw new Exception("Something wrong with upgrades lists.");
            }
            return null;
        }

        public static ushort? UpgradeVehicleUpgradeId<TEnum>(ushort model, ushort upgrade) where TEnum : struct, Enum
        {
            return UpgradeVehicleUpgradeId(typeof(TEnum), model, upgrade);
        }

        public static ushort[] UpgradeToIds(VehicleUpgradeSpoiler vehicleUpgradeSpoiler)
        {
            switch (vehicleUpgradeSpoiler)
            {
                case VehicleUpgradeSpoiler.XFlow:
                    return new ushort[] { 1050, 1060, 1139, 1146, 1158, 1163 };
                case VehicleUpgradeSpoiler.Worx:
                    return new ushort[] { 1016 };
                case VehicleUpgradeSpoiler.Win:
                    return new ushort[] { 1001 };
                case VehicleUpgradeSpoiler.Race:
                    return new ushort[] { 1015 };
                case VehicleUpgradeSpoiler.Pro:
                    return new ushort[] { 1000 };
                case VehicleUpgradeSpoiler.Fury:
                    return new ushort[] { 1023 };
                case VehicleUpgradeSpoiler.Drag:
                    return new ushort[] { 1002 };
                case VehicleUpgradeSpoiler.Champ:
                    return new ushort[] { 1014 };
                case VehicleUpgradeSpoiler.Alpha:
                    return new ushort[] { 1003 };
                case VehicleUpgradeSpoiler.Alien:
                    return new ushort[] { 1049, 1058, 1138, 1147, 1162, 1164 };
            }
            return Array.Empty<ushort>();
        }

        public static ushort[] UpgradeToIds(VehicleUpgradeWheel vehicleUpgradeWheel)
        {
            switch (vehicleUpgradeWheel)
            {
                case VehicleUpgradeWheel.Wires:
                    return new ushort[] { 1076 };
                case VehicleUpgradeWheel.Virtual:
                    return new ushort[] { 1097 };
                case VehicleUpgradeWheel.Twist:
                    return new ushort[] { 1078 };
                case VehicleUpgradeWheel.Trance:
                    return new ushort[] { 1084 };
                case VehicleUpgradeWheel.Switch:
                    return new ushort[] { 1080 };
                case VehicleUpgradeWheel.Shadow:
                    return new ushort[] { 1073 };
                case VehicleUpgradeWheel.Rimshine:
                    return new ushort[] { 1075 };
                case VehicleUpgradeWheel.Offroad:
                    return new ushort[] { 1025 };
                case VehicleUpgradeWheel.Mega:
                    return new ushort[] { 1074 };
                case VehicleUpgradeWheel.Import:
                    return new ushort[] { 1082 };
                case VehicleUpgradeWheel.Grove:
                    return new ushort[] { 1081 };
                case VehicleUpgradeWheel.Dollar:
                    return new ushort[] { 1083 };
                case VehicleUpgradeWheel.Cutter:
                    return new ushort[] { 1079 };
                case VehicleUpgradeWheel.Classic:
                    return new ushort[] { 1077 };
                case VehicleUpgradeWheel.Atomic:
                    return new ushort[] { 1085 };
                case VehicleUpgradeWheel.Ahab:
                    return new ushort[] { 1096 };
                case VehicleUpgradeWheel.Access:
                    return new ushort[] { 1098 };
            }
            return Array.Empty<ushort>();
        }
    }
}
