# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- development
pr:
- master
- development


variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs: 
- job: 'windows_cpp_build'
  pool:
    vmImage: 'windows-2022'
  steps:
  - task: VSBuild@1
    inputs:
      solution: '**\*.vcxproj'
      msbuildArgs: ''
      platform: 'x86'
      configuration: 'release'
  - task: VSBuild@1
    inputs:
      solution: '**\*.vcxproj'
      msbuildArgs: ''
      platform: 'x64'
      configuration: 'release'

- job: 'linux_cpp_build'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: CmdLine@2
      inputs:
        script: |
          cd NetModuleWrapper
          gcc wrapperFunctions.cpp -shared -o NetModuleWrapper64.so -fPIC
          gcc wrapperFunctions.cpp -m32 -shared -o NetModuleWrapper86.so -fPIC
    
  
- job: 'dotnet_build'
  pool:
    vmImage: 'windows-2022'
  dependsOn:
  - 'windows_cpp_build'
  - 'linux_cpp_build' 
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.x'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: 'restore'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet test'
    inputs:
      command: 'test'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: 'pack'
      packagesToPack: '**/SlipeServer.Packets.csproj;**/SlipeServer.Net.csproj;**/SlipeServer.Server.csproj;**/SlipeServer.Server.TestTools.csproj;**/SlipeServer.Scripting.csproj;**/SlipeServer.Lua.csproj;**/SlipeServer.Physics.csproj;**/SlipeServer.SourceGenerators.csproj'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '0'
      minorVersion: '1'
      patchVersion: '0'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet publish'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/*.sln'
      arguments: '--output $(Build.ArtifactStagingDirectory)'
      
  - task: PublishBuildArtifacts@1
    displayName: 'publish artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'